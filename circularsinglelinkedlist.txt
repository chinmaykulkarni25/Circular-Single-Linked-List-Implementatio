#include<stdio.h>
#include<stdlib.h>
struct node{
    int data;
    struct node*next;
};
struct node*root=NULL;
void create (){
    int number =1;
    while(number==1){
        struct node *temp;
        temp=(struct node*)malloc(sizeof(struct node ));
        printf("Enter the data = ");
        scanf("%d",&temp->data);
        temp->next=NULL;
        if(root==NULL){
            root=temp;
            temp->next=root;//circular linked lists 
        }
        else{
            struct node*p;
            p=root;
            while(p->next!=root){
                p=p->next;
            }
            p->next =temp;
            temp->next=root;//circular linked lists
        }
    
    printf("Press 1 for insert & 0 for stop = ");
    scanf("%d",&number);
    }
}
void insertatbegning(){
    struct node*temp,*p;
    temp=(struct node*)malloc(sizeof(struct node));
    printf("Enterthe data =");
    scanf("%d",&temp->data);
    temp->next =NULL;
    if(root==NULL){
        root=temp;
        temp->next=root;
    }
    
    else{
        //struct node*p;
        p=root;
        while(p->next!=root){
            p=p->next;
        }
    
        temp->next=root;
        root=temp;
        p->next=root;
    }
    
}
void inseratend(){
    struct node*temp;
    temp=(struct node*)malloc(sizeof(struct node));
    printf("Enter the data = ");
    scanf("%d",& temp->data);
    temp->next =NULL;
    if(root==NULL){
        root=temp;
        temp->next=root;
    }
    else{
        struct node*p;
        p=root;
        while(p->next!=root){
            p=p->next;

        }
        p->next=temp;
        temp->next=root;
    }
}
void length(){
    int count =0;
    struct node*temp;
    temp=root;
    while(temp!=NULL){
        count++;
        temp=temp->next;
    }
    printf("%d",count);

}
void delete(){
    struct node *temp;
    int pos;
    printf("Enter the location of adata you want to delete = ");
    scanf("%d",&pos);
    if(pos==1){
        temp=root;
        root=root->next;
        temp->next=NULL;
    
    free(temp);
    }
    else{
        struct node*p;
        p=root;
        int i=1;
        while(i<pos-1){
            p=p->next;
            i++;
        }
        struct node*q;
        q=p->next;
        q->next=p->next;
        q->next=NULL;
    
    free(q);
    }
}
void display(){
    if(root==NULL){
        printf("Linked list is not eist");
    }
    else{
        struct node*temp;
         temp=root;
        while(temp->next!=root){
            printf("%d->",temp->data);
            temp=temp->next;
        }
    }
}

int main(){
    int ch;
    while(1){
        printf("following are theo[perations pof circular linked lists = \n");
        printf("1.create\n");
        printf("2.insertatbegning\n");
        printf("3.insertatend\n");
        printf("4.length\n");
        printf("5.delete\n");
        printf("6.display\n");
        printf("7.exit\n");
        printf("Enter your choice = ");
        scanf("%d",&ch);
    switch(ch){
        case 1: create();
        break;
        case 2: insertatbegning();
        break;
        case 3: inseratend();
        break;
        case 4: length();
        break;
        case 5: delete();
        break;
        case 6:display();
        break;
        case 7:exit(0);
        return 0;
        default: printf("You enter wrong choice ");
    }
    }
    return 0;
}
